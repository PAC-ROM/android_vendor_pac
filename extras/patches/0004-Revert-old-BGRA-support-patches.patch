From efa1529c73bdaeb06bf14b96a66100858e860923 Mon Sep 17 00:00:00 2001
From: Steve Kondik <steve@cyngn.com>
Date: Mon, 30 Mar 2015 14:00:17 -0700
Subject: [PATCH 4/6] Revert old BGRA support patches

 * These do not do the correct thing, and result in a 4X performance
   degradation because of it.

Revert "sr: Always use 32-bit framebuffer"

This reverts commit c34f4fe066915621a27bc7525aa2668e2235e2de.

Revert "sr: Support BGRA framebuffer"

This reverts commit e8268fef7e73c2a7a8b21cd8e0c26843a06df144.

Change-Id: Icf2a786a7fad542b225906700a7a258598a092dd
---
 minui/graphics.c       | 30 ------------------------------
 minui/graphics_fbdev.c | 29 -----------------------------
 2 files changed, 59 deletions(-)

diff --git a/minui/graphics.c b/minui/graphics.c
index 3dea930..a4b5d48 100644
--- a/minui/graphics.c
+++ b/minui/graphics.c
@@ -75,21 +75,6 @@ static bool outside(int x, int y)
     return x < 0 || x >= gr_draw->width || y < 0 || y >= gr_draw->height;
 }
 
-#if defined(RECOVERY_BGRA)
-static void rgba2bgra(unsigned char *p, int w)
-{
-    int x;
-    for (x = 0; x < w; ++x) {
-        char r, b;
-        r = *(p+0);
-        b = *(p+2);
-        *(p+0) = b;
-        *(p+2) = r;
-        p += 4;
-    }
-}
-#endif
-
 int gr_measure(const char *s)
 {
     return gr_font->cwidth * strlen(s);
@@ -127,9 +112,6 @@ static void icon_blend_alpha(unsigned char* src_p,int src_row_bytes,
              ++px;
              ++px;
         }
-#if defined(RECOVERY_BGRA)
-        rgba2bgra(dst_p, width);
-#endif
         src_p += src_row_bytes;
         dst_p += dst_row_bytes;
     }
@@ -161,9 +143,6 @@ static void text_blend(unsigned char* src_p, int src_row_bytes,
                 px += 4;
             }
         }
-#if defined(RECOVERY_BGRA)
-        rgba2bgra(dst_p, width);
-#endif
         src_p += src_row_bytes;
         dst_p += dst_row_bytes;
     }
@@ -262,9 +241,6 @@ void gr_clear()
                 *px++ = gr_current_b;
                 px++;
             }
-#if defined(RECOVERY_BGRA)
-            rgba2bgra(px - gr_draw->width * 4, gr_draw->width);
-#endif
             px += gr_draw->row_bytes - (gr_draw->width * gr_draw->pixel_bytes);
         }
     }
@@ -291,9 +267,6 @@ void gr_fill(int x1, int y1, int x2, int y2)
                 *px++ = gr_current_b;
                 px++;
             }
-#if defined(RECOVERY_BGRA)
-            rgba2bgra(p, x2-x1);
-#endif
             p += gr_draw->row_bytes;
         }
     } else if (gr_current_a > 0) {
@@ -309,9 +282,6 @@ void gr_fill(int x1, int y1, int x2, int y2)
                 ++px;
                 ++px;
             }
-#if defined(RECOVERY_BGRA)
-            rgba2bgra(p, x2-x1);
-#endif
             p += gr_draw->row_bytes;
         }
     }
diff --git a/minui/graphics_fbdev.c b/minui/graphics_fbdev.c
index 4c8ece4..041141b 100644
--- a/minui/graphics_fbdev.c
+++ b/minui/graphics_fbdev.c
@@ -123,35 +123,6 @@ static gr_surface fbdev_init(minui_backend* backend) {
            vi.green.offset, vi.green.length,
            vi.blue.offset, vi.blue.length);
 
-    if (vi.bits_per_pixel != 32) {
-        vi.bits_per_pixel = 32;
-#ifdef RECOVERY_BGRA
-        vi.red.offset     = 8;
-        vi.green.offset   = 16;
-        vi.blue.offset    = 24;
-        vi.transp.offset  = 0;
-#else
-        vi.red.offset     = 24;
-        vi.green.offset   = 16;
-        vi.blue.offset    = 8;
-        vi.transp.offset  = 0;
-#endif
-        vi.red.length     = 8;
-        vi.green.length   = 8;
-        vi.blue.length    = 8;
-        vi.transp.length  = 8;
-        if (ioctl(fd, FBIOPUT_VSCREENINFO, &vi) < 0) {
-            perror("failed to put fb0 info");
-            close(fd);
-            return NULL;
-        }
-        if (ioctl(fd, FBIOGET_FSCREENINFO, &fi) < 0) {
-            perror("failed to get fb0 info");
-            close(fd);
-            return NULL;
-        }
-    }
-
     bits = mmap(0, fi.smem_len, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);
     if (bits == MAP_FAILED) {
         perror("failed to mmap framebuffer");
-- 
1.9.1

